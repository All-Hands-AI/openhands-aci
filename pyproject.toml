[tool.poetry]
name = "openhands-aci"
version = "0.3.1"
description = "An Agent-Computer Interface (ACI) designed for software development agents OpenHands."
authors = ["OpenHands"]
license = "MIT"
readme = "README.md"
packages = [
  { include = "openhands_aci/**/*" }
]

[tool.poetry.dependencies]
python = "^3.12"
# Core editor dependencies
binaryornot = "^0.4.4"
cachetools = "^5.5.2"
charset-normalizer = "^3.4.1"
pydantic = "^2.11.3"
# Linter dependencies
tree-sitter = "^0.24.0"
tree-sitter-language-pack = "0.7.3"
grep-ast = "^0.9.0"
flake8 = "*"
# Utils dependencies
whatthepatch = "^1.0.6"

# Optional dependencies for document processing
beautifulsoup4 = { version = ">=4.12.3", optional = true }
mammoth = { version = ">=1.8.0", optional = true }
markdownify = { version = ">=0.13.1", optional = true }
pdfminer-six = { version = ">=20240706", optional = true }
puremagic = { version = ">=1.28", optional = true }
pypdf = { version = ">=5.1.0", optional = true }
python-pptx = { version = "^1.0.2", optional = true }
requests = { version = ">=2.32.3", optional = true }
youtube-transcript-api = { version = ">=0.6.2", optional = true }
pydub = { version = "^0.25.1", optional = true }
pypdf2 = { version = "^3.0.1", optional = true }
xlrd = { version = "^2.0.1", optional = true }
speechrecognition = { version = "^3.14.1", optional = true }
openpyxl = { version = "^3.1.5", optional = true }

# Optional dependencies for indexing functionality
pandas = { version = "*", optional = true }
matplotlib = { version = "^3.10.3", optional = true }
networkx = { version = "^3.4.2", optional = true }
gitpython = { version = "*", optional = true }
libcst = { version = "1.5.0", optional = true }
rapidfuzz = { version = "^3.13.0", optional = true }

# Optional dependencies for llama-index functionality
llama-index = { version = "^0.12.29", optional = true }
llama-index-core = { version = "^0.12.29", optional = true }
llama-index-retrievers-bm25 = { version = "^0.5.2", optional = true }

[tool.poetry.extras]
documents = [
    "beautifulsoup4", "mammoth", "markdownify", "pdfminer-six", "puremagic", 
    "pypdf", "python-pptx", "requests", "youtube-transcript-api", "pydub", 
    "pypdf2", "xlrd", "speechrecognition", "openpyxl"
]
indexing = [
    "pandas", "matplotlib", "networkx", "gitpython", "libcst", "rapidfuzz"
]
llama = ["llama-index", "llama-index-core", "llama-index-retrievers-bm25"]
all = [
    "beautifulsoup4", "mammoth", "markdownify", "pdfminer-six", "puremagic", 
    "pypdf", "python-pptx", "requests", "youtube-transcript-api", "pydub", 
    "pypdf2", "xlrd", "speechrecognition", "openpyxl", "pandas", "matplotlib", 
    "networkx", "gitpython", "libcst", "rapidfuzz", "llama-index", 
    "llama-index-core", "llama-index-retrievers-bm25"
]

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.2"
pre-commit = "^4.0.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
psutil = "^5.9.8"
pytest-forked = "*"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.autopep8]
# autopep8 fights with mypy on line length issue
ignore = [ "E501" ]

[tool.black]
# prevent black (if installed) from changing single quotes to double quotes
skip-string-normalization = true

[tool.ruff.lint]
select = ["D"]
# ignore warnings for missing docstrings
ignore = ["D1"]

[tool.ruff.lint.pydocstyle]
convention = "google"
